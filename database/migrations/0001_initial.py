# Generated by Django 5.0.6 on 2024-06-05 12:37

import django.db.models.deletion
import django_ckeditor_5.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('site_setting', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Slider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='Slider/', verbose_name='Картинка')),
                ('title', models.CharField(max_length=50, verbose_name='Заголовок')),
                ('is_active', models.BooleanField(default=True, verbose_name='Отоброжать')),
            ],
            options={
                'verbose_name': 'Слайдер',
                'verbose_name_plural': 'Слайдеры',
            },
        ),
        migrations.CreateModel(
            name='TattooType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Тип тату')),
            ],
            options={
                'verbose_name': 'Тип тату',
                'verbose_name_plural': 'Типы тату',
            },
        ),
        migrations.CreateModel(
            name='Works',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='WorksPhoto/', verbose_name='Фотография')),
                ('name', models.CharField(max_length=30, verbose_name='Название')),
                ('type', models.CharField(max_length=30, verbose_name='Тип тату')),
            ],
            options={
                'verbose_name': 'Работа',
                'verbose_name_plural': 'Работы',
            },
        ),
        migrations.CreateModel(
            name='Master',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='MastersPhoto/', verbose_name='Фотография')),
                ('name', models.CharField(max_length=20, verbose_name='Имя')),
                ('short_description', models.TextField(blank=True, help_text='Текст отоброжаемый на странице со всеми мастерами', verbose_name='Краткое описание')),
                ('description', django_ckeditor_5.fields.CKEditor5Field(verbose_name='Описание')),
                ('experience', models.PositiveIntegerField(default=0, verbose_name='Стаж работы')),
                ('min_price', models.PositiveIntegerField(verbose_name='Минимальная цена')),
                ('is_active', models.BooleanField(default=True, verbose_name='Отоброжать')),
                ('salon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='site_setting.salon', verbose_name='Салон')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_master', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('tattoo_type', models.ManyToManyField(blank=True, to='database.tattootype', verbose_name='Типы тату')),
                ('works', models.ManyToManyField(blank=True, to='database.works', verbose_name='Работы мастера')),
            ],
            options={
                'verbose_name': 'Мастер',
                'verbose_name_plural': 'Мастера',
            },
        ),
        migrations.CreateModel(
            name='MasterReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')])),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('master', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.master')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.CharField(choices=[('Понедельник', 'Понедельник'), ('Вторник', 'Вторник'), ('Среда', 'Среда'), ('Четверг', 'Четверг'), ('Пятница', 'Пятница'), ('Суббота', 'Суббота'), ('Воскресенье', 'Воскресенье')], max_length=20, verbose_name='День недели')),
                ('start_time', models.TimeField(verbose_name='Время начала')),
                ('end_time', models.TimeField(verbose_name='Время окончания')),
                ('is_active', models.BooleanField(default=True, verbose_name='Актуальный')),
                ('master', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.master', verbose_name='Мастер')),
            ],
            options={
                'verbose_name': 'Сеанс',
                'verbose_name_plural': 'Сеансы',
            },
        ),
        migrations.CreateModel(
            name='AppointmentV2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_email', models.EmailField(max_length=254)),
                ('client_phone', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('client_name', models.CharField(max_length=100)),
                ('status', models.BooleanField(default=False, help_text='Мастер дал ответ клиенту', verbose_name='Ответил')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.session')),
            ],
            options={
                'verbose_name': 'Запись',
                'verbose_name_plural': 'Записи',
            },
        ),
        migrations.CreateModel(
            name='SocialAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Текст который будет отображен вместо ссылки', max_length=20, verbose_name='Название')),
                ('link', models.URLField(verbose_name='Ссылка')),
                ('icon', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='site_setting.socialaccounticon', verbose_name='Иконка')),
                ('master', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_account', to='database.master', verbose_name='Мастер')),
            ],
            options={
                'verbose_name': 'Социальная сеть',
                'verbose_name_plural': 'Социальные сети',
            },
        ),
        migrations.CreateModel(
            name='Consultation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_email', models.EmailField(max_length=254)),
                ('client_phone', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('client_name', models.CharField(max_length=100)),
                ('status', models.BooleanField(default=False, help_text='Мастер дал ответ клиенту', verbose_name='Ответил')),
                ('master', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.master')),
                ('types', models.ManyToManyField(blank=True, to='database.tattootype', verbose_name='Интересующие типы тату')),
            ],
            options={
                'verbose_name': 'Запись',
                'verbose_name_plural': 'Записи',
            },
        ),
    ]
